apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cardano-webhooks-helm-chart.fullname" . }}
  labels:
    {{- include "cardano-webhooks-helm-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cardano-webhooks-helm-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cardano-webhooks-helm-chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["npm", "run", "start:dev"]  # Ensure this command is correct
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecretName }}
                  key: DB_USER
            - name: DB_PWD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecretName }}
                  key: DB_PWD
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecretName }}
                  key: REDIS_HOST
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecretName }}
                  key: DB_HOST
            - name: DB_HOST_TESTNET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecretName }}
                  key: DB_HOST_TESTNET
            - name: DB_USER_TESTNET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecretName }}
                  key: DB_USER_TESTNET
            - name: DB_PWD_TESTNET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecretName }}
                  key: DB_PWD_TESTNET
            - name: SCYLLA_CONTACT_POINTS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecretName }}
                  key: SCYLLA_CONTACT_POINTS
            - name: KAFKA_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecretName }}
                  key: KAFKA_HOST
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: app-volume
              mountPath: /opt/node_app/app/
      volumes:
        - name: app-volume
          emptyDir: {}